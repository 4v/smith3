//
// SMITH3 - generates spin-free multireference electron correlation programs.
// Filename: main.cc
// Copyright (C) 2012 Toru Shiozaki
//
// Author: Toru Shiozaki <shiozaki@northwestern.edu>
// Maintainer: Shiozaki group
//
// This file is part of the SMITH3 package.
//
// The SMITH3 package is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as published by
// the Free Software Foundation; either version 2, or (at your option)
// any later version.
//
// The SMITH3 package is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public License
// along with the SMITH3 package; see COPYING.  If not, write to
// the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
//


// This program is supposed to perform Wick's theorem for multireference problems.
// Spin averaged quantities assumed.

#include <fstream>
#include "forest.h"
#include "residual.h"
#include "energy.h"
#include "dedci.h"
#include "density.h"
#include "density1.h"
#include "density2.h"
#include "correction.h"

using namespace std;
using namespace smith;

int main() {

  string theory="CAS_test";

  shared_ptr<Operator> ex_0 = make_shared<Ex>("c", "c", "x", "x");
  shared_ptr<Operator> ex_1 = make_shared<Ex>("c", "c", "x", "a");
  shared_ptr<Operator> ex_2 = make_shared<Ex>("c", "c", "a", "a");
  shared_ptr<Operator> ex_3 = make_shared<Ex>("x", "c", "a", "a");
  shared_ptr<Operator> ex_4 = make_shared<Ex>("x", "x", "a", "a");
  shared_ptr<Operator> t20 = make_shared<Op>("t2", "x", "x", "c", "c");
  shared_ptr<Operator> t21 = make_shared<Op>("t2", "x", "a", "c", "c");
  shared_ptr<Operator> t22 = make_shared<Op>("t2", "a", "a", "c", "c");
  shared_ptr<Operator> t23 = make_shared<Op>("t2", "a", "a", "x", "c");
  shared_ptr<Operator> t24 = make_shared<Op>("t2", "a", "a", "x", "x");
  shared_ptr<Operator> r0 = make_shared<Op>("r", "x", "x", "c", "c");
  shared_ptr<Operator> r1 = make_shared<Op>("r", "x", "a", "c", "c");
  shared_ptr<Operator> r2 = make_shared<Op>("r", "a", "a", "c", "c");
  shared_ptr<Operator> r3 = make_shared<Op>("r", "a", "a", "x", "c");
  shared_ptr<Operator> r4 = make_shared<Op>("r", "a", "a", "x", "x");
  shared_ptr<Operator> f1 = make_shared<Op>("f1", "g", "g");
  shared_ptr<Operator> v2 = make_shared<Op>("v2", "g", "g", "g", "g");
  shared_ptr<Operator> h1 = make_shared<Op>("h1", "g", "g");
  shared_ptr<Operator> proje = make_shared<Op>("proj");
  shared_ptr<Operator> t2dagger0 = make_shared<Op>("t2dagger", "c", "c", "x", "x");
  shared_ptr<Operator> t2dagger1 = make_shared<Op>("t2dagger", "c", "c", "x", "a");
  shared_ptr<Operator> t2dagger2 = make_shared<Op>("t2dagger", "c", "c", "a", "a");
  shared_ptr<Operator> t2dagger3 = make_shared<Op>("t2dagger", "x", "c", "a", "a");
  shared_ptr<Operator> t2dagger4 = make_shared<Op>("t2dagger", "x", "x", "a", "a");
  shared_ptr<Operator> ex_1b = make_shared<Ex>("g", "g");

  list<shared_ptr<Operator>> ra0 = {proje, ex_0, f1, t20};
  list<shared_ptr<Operator>> ra1 = {proje, ex_0, f1, t21};
  list<shared_ptr<Operator>> ra2 = {proje, ex_0, f1, t22};
  list<shared_ptr<Operator>> ra3 = {proje, ex_0, f1, t23};
  list<shared_ptr<Operator>> ra4 = {proje, ex_0, f1, t24};
  list<shared_ptr<Operator>> ra5 = {proje, ex_1, f1, t20};
  list<shared_ptr<Operator>> ra6 = {proje, ex_1, f1, t21};
  list<shared_ptr<Operator>> ra7 = {proje, ex_1, f1, t22};
  list<shared_ptr<Operator>> ra8 = {proje, ex_1, f1, t23};
  list<shared_ptr<Operator>> ra9 = {proje, ex_1, f1, t24};
  list<shared_ptr<Operator>> ra10 = {proje, ex_2, f1, t20};
  list<shared_ptr<Operator>> ra11 = {proje, ex_2, f1, t21};
  list<shared_ptr<Operator>> ra12 = {proje, ex_2, f1, t22};
  list<shared_ptr<Operator>> ra13 = {proje, ex_2, f1, t23};
  list<shared_ptr<Operator>> ra14 = {proje, ex_2, f1, t24};
  list<shared_ptr<Operator>> ra15 = {proje, ex_3, f1, t20};
  list<shared_ptr<Operator>> ra16 = {proje, ex_3, f1, t21};
  list<shared_ptr<Operator>> ra17 = {proje, ex_3, f1, t22};
  list<shared_ptr<Operator>> ra18 = {proje, ex_3, f1, t23};
  list<shared_ptr<Operator>> ra19 = {proje, ex_3, f1, t24};
  list<shared_ptr<Operator>> ra20 = {proje, ex_4, f1, t20};
  list<shared_ptr<Operator>> ra21 = {proje, ex_4, f1, t21};
  list<shared_ptr<Operator>> ra22 = {proje, ex_4, f1, t22};
  list<shared_ptr<Operator>> ra23 = {proje, ex_4, f1, t23};
  list<shared_ptr<Operator>> ra24 = {proje, ex_4, f1, t24};
  list<shared_ptr<Operator>> rb0 = {proje, ex_0, t20};
  list<shared_ptr<Operator>> rb1 = {proje, ex_0, t21};
  list<shared_ptr<Operator>> rb2 = {proje, ex_0, t22};
  list<shared_ptr<Operator>> rb3 = {proje, ex_0, t23};
  list<shared_ptr<Operator>> rb4 = {proje, ex_0, t24};
  list<shared_ptr<Operator>> rb5 = {proje, ex_1, t20};
  list<shared_ptr<Operator>> rb6 = {proje, ex_1, t21};
  list<shared_ptr<Operator>> rb7 = {proje, ex_1, t22};
  list<shared_ptr<Operator>> rb8 = {proje, ex_1, t23};
  list<shared_ptr<Operator>> rb9 = {proje, ex_1, t24};
  list<shared_ptr<Operator>> rb10 = {proje, ex_2, t20};
  list<shared_ptr<Operator>> rb11 = {proje, ex_2, t21};
  list<shared_ptr<Operator>> rb12 = {proje, ex_2, t22};
  list<shared_ptr<Operator>> rb13 = {proje, ex_2, t23};
  list<shared_ptr<Operator>> rb14 = {proje, ex_2, t24};
  list<shared_ptr<Operator>> rb15 = {proje, ex_3, t20};
  list<shared_ptr<Operator>> rb16 = {proje, ex_3, t21};
  list<shared_ptr<Operator>> rb17 = {proje, ex_3, t22};
  list<shared_ptr<Operator>> rb18 = {proje, ex_3, t23};
  list<shared_ptr<Operator>> rb19 = {proje, ex_3, t24};
  list<shared_ptr<Operator>> rb20 = {proje, ex_4, t20};
  list<shared_ptr<Operator>> rb21 = {proje, ex_4, t21};
  list<shared_ptr<Operator>> rb22 = {proje, ex_4, t22};
  list<shared_ptr<Operator>> rb23 = {proje, ex_4, t23};
  list<shared_ptr<Operator>> rb24 = {proje, ex_4, t24};
  list<shared_ptr<Operator>> rc0 = {proje, ex_0, v2};
  list<shared_ptr<Operator>> rc1 = {proje, ex_1, v2};
  list<shared_ptr<Operator>> rc2 = {proje, ex_2, v2};
  list<shared_ptr<Operator>> rc3 = {proje, ex_3, v2};
  list<shared_ptr<Operator>> rc4 = {proje, ex_4, v2};
  list<shared_ptr<Operator>> rd0 = {proje, ex_0, h1};
  list<shared_ptr<Operator>> rd1 = {proje, ex_1, h1};
  list<shared_ptr<Operator>> rd2 = {proje, ex_2, h1};
  list<shared_ptr<Operator>> rd3 = {proje, ex_3, h1};
  list<shared_ptr<Operator>> rd4 = {proje, ex_4, h1};
  auto dra0 = make_shared<Diagram>(ra0);
  auto dra1 = make_shared<Diagram>(ra1);
  auto dra2 = make_shared<Diagram>(ra2);
  auto dra3 = make_shared<Diagram>(ra3);
  auto dra4 = make_shared<Diagram>(ra4);
  auto dra5 = make_shared<Diagram>(ra5);
  auto dra6 = make_shared<Diagram>(ra6);
  auto dra7 = make_shared<Diagram>(ra7);
  auto dra8 = make_shared<Diagram>(ra8);
  auto dra9 = make_shared<Diagram>(ra9);
  auto dra10 = make_shared<Diagram>(ra10);
  auto dra11 = make_shared<Diagram>(ra11);
  auto dra12 = make_shared<Diagram>(ra12);
  auto dra13 = make_shared<Diagram>(ra13);
  auto dra14 = make_shared<Diagram>(ra14);
  auto dra15 = make_shared<Diagram>(ra15);
  auto dra16 = make_shared<Diagram>(ra16);
  auto dra17 = make_shared<Diagram>(ra17);
  auto dra18 = make_shared<Diagram>(ra18);
  auto dra19 = make_shared<Diagram>(ra19);
  auto dra20 = make_shared<Diagram>(ra20);
  auto dra21 = make_shared<Diagram>(ra21);
  auto dra22 = make_shared<Diagram>(ra22);
  auto dra23 = make_shared<Diagram>(ra23);
  auto dra24 = make_shared<Diagram>(ra24);
  auto drb0 = make_shared<Diagram>(rb0, -1, "e0");
  auto drb1 = make_shared<Diagram>(rb1, -1, "e0");
  auto drb2 = make_shared<Diagram>(rb2, -1, "e0");
  auto drb3 = make_shared<Diagram>(rb3, -1, "e0");
  auto drb4 = make_shared<Diagram>(rb4, -1, "e0");
  auto drb5 = make_shared<Diagram>(rb5, -1, "e0");
  auto drb6 = make_shared<Diagram>(rb6, -1, "e0");
  auto drb7 = make_shared<Diagram>(rb7, -1, "e0");
  auto drb8 = make_shared<Diagram>(rb8, -1, "e0");
  auto drb9 = make_shared<Diagram>(rb9, -1, "e0");
  auto drb10 = make_shared<Diagram>(rb10, -1, "e0");
  auto drb11 = make_shared<Diagram>(rb11, -1, "e0");
  auto drb12 = make_shared<Diagram>(rb12, -1, "e0");
  auto drb13 = make_shared<Diagram>(rb13, -1, "e0");
  auto drb14 = make_shared<Diagram>(rb14, -1, "e0");
  auto drb15 = make_shared<Diagram>(rb15, -1, "e0");
  auto drb16 = make_shared<Diagram>(rb16, -1, "e0");
  auto drb17 = make_shared<Diagram>(rb17, -1, "e0");
  auto drb18 = make_shared<Diagram>(rb18, -1, "e0");
  auto drb19 = make_shared<Diagram>(rb19, -1, "e0");
  auto drb20 = make_shared<Diagram>(rb20, -1, "e0");
  auto drb21 = make_shared<Diagram>(rb21, -1, "e0");
  auto drb22 = make_shared<Diagram>(rb22, -1, "e0");
  auto drb23 = make_shared<Diagram>(rb23, -1, "e0");
  auto drb24 = make_shared<Diagram>(rb24, -1, "e0");
  auto drc0 = make_shared<Diagram>(rc0);
  auto drc1 = make_shared<Diagram>(rc1);
  auto drc2 = make_shared<Diagram>(rc2);
  auto drc3 = make_shared<Diagram>(rc3);
  auto drc4 = make_shared<Diagram>(rc4);
  auto drd0 = make_shared<Diagram>(rd0);
  auto drd1 = make_shared<Diagram>(rd1);
  auto drd2 = make_shared<Diagram>(rd2);
  auto drd3 = make_shared<Diagram>(rd3);
  auto drd4 = make_shared<Diagram>(rd4);
  auto era0 = make_shared<Equation>(dra0, theory);
  auto era1 = make_shared<Equation>(dra1, theory);
  auto era2 = make_shared<Equation>(dra2, theory);
  auto era3 = make_shared<Equation>(dra3, theory);
  auto era4 = make_shared<Equation>(dra4, theory);
  auto era5 = make_shared<Equation>(dra5, theory);
  auto era6 = make_shared<Equation>(dra6, theory);
  auto era7 = make_shared<Equation>(dra7, theory);
  auto era8 = make_shared<Equation>(dra8, theory);
  auto era9 = make_shared<Equation>(dra9, theory);
  auto era10 = make_shared<Equation>(dra10, theory);
  auto era11 = make_shared<Equation>(dra11, theory);
  auto era12 = make_shared<Equation>(dra12, theory);
  auto era13 = make_shared<Equation>(dra13, theory);
  auto era14 = make_shared<Equation>(dra14, theory);
  auto era15 = make_shared<Equation>(dra15, theory);
  auto era16 = make_shared<Equation>(dra16, theory);
  auto era17 = make_shared<Equation>(dra17, theory);
  auto era18 = make_shared<Equation>(dra18, theory);
  auto era19 = make_shared<Equation>(dra19, theory);
  auto era20 = make_shared<Equation>(dra20, theory);
  auto era21 = make_shared<Equation>(dra21, theory);
  auto era22 = make_shared<Equation>(dra22, theory);
  auto era23 = make_shared<Equation>(dra23, theory);
  auto era24 = make_shared<Equation>(dra24, theory);
  auto erb0 = make_shared<Equation>(drb0, theory);
  auto erb1 = make_shared<Equation>(drb1, theory);
  auto erb2 = make_shared<Equation>(drb2, theory);
  auto erb3 = make_shared<Equation>(drb3, theory);
  auto erb4 = make_shared<Equation>(drb4, theory);
  auto erb5 = make_shared<Equation>(drb5, theory);
  auto erb6 = make_shared<Equation>(drb6, theory);
  auto erb7 = make_shared<Equation>(drb7, theory);
  auto erb8 = make_shared<Equation>(drb8, theory);
  auto erb9 = make_shared<Equation>(drb9, theory);
  auto erb10 = make_shared<Equation>(drb10, theory);
  auto erb11 = make_shared<Equation>(drb11, theory);
  auto erb12 = make_shared<Equation>(drb12, theory);
  auto erb13 = make_shared<Equation>(drb13, theory);
  auto erb14 = make_shared<Equation>(drb14, theory);
  auto erb15 = make_shared<Equation>(drb15, theory);
  auto erb16 = make_shared<Equation>(drb16, theory);
  auto erb17 = make_shared<Equation>(drb17, theory);
  auto erb18 = make_shared<Equation>(drb18, theory);
  auto erb19 = make_shared<Equation>(drb19, theory);
  auto erb20 = make_shared<Equation>(drb20, theory);
  auto erb21 = make_shared<Equation>(drb21, theory);
  auto erb22 = make_shared<Equation>(drb22, theory);
  auto erb23 = make_shared<Equation>(drb23, theory);
  auto erb24 = make_shared<Equation>(drb24, theory);
  auto erc0 = make_shared<Equation>(drc0, theory);
  auto erc1 = make_shared<Equation>(drc1, theory);
  auto erc2 = make_shared<Equation>(drc2, theory);
  auto erc3 = make_shared<Equation>(drc3, theory);
  auto erc4 = make_shared<Equation>(drc4, theory);
  auto erd0 = make_shared<Equation>(drd0, theory);
  auto erd1 = make_shared<Equation>(drd1, theory);
  auto erd2 = make_shared<Equation>(drd2, theory);
  auto erd3 = make_shared<Equation>(drd3, theory);
  auto erd4 = make_shared<Equation>(drd4, theory);
  era0->merge(era1);
  era0->merge(era2);
  era0->merge(era3);
  era0->merge(era4);
  era0->merge(era5);
  era0->merge(era6);
  era0->merge(era7);
  era0->merge(era8);
  era0->merge(era9);
  era0->merge(era10);
  era0->merge(era11);
  era0->merge(era12);
  era0->merge(era13);
  era0->merge(era14);
  era0->merge(era15);
  era0->merge(era16);
  era0->merge(era17);
  era0->merge(era18);
  era0->merge(era19);
  era0->merge(era20);
  era0->merge(era21);
  era0->merge(era22);
  era0->merge(era23);
  era0->merge(era24);
  era0->merge(erb0);
  era0->merge(erb1);
  era0->merge(erb2);
  era0->merge(erb3);
  era0->merge(erb4);
  era0->merge(erb5);
  era0->merge(erb6);
  era0->merge(erb7);
  era0->merge(erb8);
  era0->merge(erb9);
  era0->merge(erb10);
  era0->merge(erb11);
  era0->merge(erb12);
  era0->merge(erb13);
  era0->merge(erb14);
  era0->merge(erb15);
  era0->merge(erb16);
  era0->merge(erb17);
  era0->merge(erb18);
  era0->merge(erb19);
  era0->merge(erb20);
  era0->merge(erb21);
  era0->merge(erb22);
  era0->merge(erb23);
  era0->merge(erb24);
  era0->merge(erc0);
  era0->merge(erc1);
  era0->merge(erc2);
  era0->merge(erc3);
  era0->merge(erc4);
  era0->merge(erd0);
  era0->merge(erd1);
  era0->merge(erd2);
  era0->merge(erd3);
  era0->merge(erd4);
  era0->duplicates();
  era0->active();
  auto tra = make_shared<Residual>(era0, "residual");

  list<shared_ptr<Operator>> ea0 = {proje, t2dagger0, f1, t20};
  list<shared_ptr<Operator>> ea1 = {proje, t2dagger0, f1, t21};
  list<shared_ptr<Operator>> ea2 = {proje, t2dagger0, f1, t22};
  list<shared_ptr<Operator>> ea3 = {proje, t2dagger0, f1, t23};
  list<shared_ptr<Operator>> ea4 = {proje, t2dagger0, f1, t24};
  list<shared_ptr<Operator>> ea5 = {proje, t2dagger1, f1, t20};
  list<shared_ptr<Operator>> ea6 = {proje, t2dagger1, f1, t21};
  list<shared_ptr<Operator>> ea7 = {proje, t2dagger1, f1, t22};
  list<shared_ptr<Operator>> ea8 = {proje, t2dagger1, f1, t23};
  list<shared_ptr<Operator>> ea9 = {proje, t2dagger1, f1, t24};
  list<shared_ptr<Operator>> ea10 = {proje, t2dagger2, f1, t20};
  list<shared_ptr<Operator>> ea11 = {proje, t2dagger2, f1, t21};
  list<shared_ptr<Operator>> ea12 = {proje, t2dagger2, f1, t22};
  list<shared_ptr<Operator>> ea13 = {proje, t2dagger2, f1, t23};
  list<shared_ptr<Operator>> ea14 = {proje, t2dagger2, f1, t24};
  list<shared_ptr<Operator>> ea15 = {proje, t2dagger3, f1, t20};
  list<shared_ptr<Operator>> ea16 = {proje, t2dagger3, f1, t21};
  list<shared_ptr<Operator>> ea17 = {proje, t2dagger3, f1, t22};
  list<shared_ptr<Operator>> ea18 = {proje, t2dagger3, f1, t23};
  list<shared_ptr<Operator>> ea19 = {proje, t2dagger3, f1, t24};
  list<shared_ptr<Operator>> ea20 = {proje, t2dagger4, f1, t20};
  list<shared_ptr<Operator>> ea21 = {proje, t2dagger4, f1, t21};
  list<shared_ptr<Operator>> ea22 = {proje, t2dagger4, f1, t22};
  list<shared_ptr<Operator>> ea23 = {proje, t2dagger4, f1, t23};
  list<shared_ptr<Operator>> ea24 = {proje, t2dagger4, f1, t24};
  list<shared_ptr<Operator>> eb0 = {proje, t2dagger0, t20};
  list<shared_ptr<Operator>> eb1 = {proje, t2dagger0, t21};
  list<shared_ptr<Operator>> eb2 = {proje, t2dagger0, t22};
  list<shared_ptr<Operator>> eb3 = {proje, t2dagger0, t23};
  list<shared_ptr<Operator>> eb4 = {proje, t2dagger0, t24};
  list<shared_ptr<Operator>> eb5 = {proje, t2dagger1, t20};
  list<shared_ptr<Operator>> eb6 = {proje, t2dagger1, t21};
  list<shared_ptr<Operator>> eb7 = {proje, t2dagger1, t22};
  list<shared_ptr<Operator>> eb8 = {proje, t2dagger1, t23};
  list<shared_ptr<Operator>> eb9 = {proje, t2dagger1, t24};
  list<shared_ptr<Operator>> eb10 = {proje, t2dagger2, t20};
  list<shared_ptr<Operator>> eb11 = {proje, t2dagger2, t21};
  list<shared_ptr<Operator>> eb12 = {proje, t2dagger2, t22};
  list<shared_ptr<Operator>> eb13 = {proje, t2dagger2, t23};
  list<shared_ptr<Operator>> eb14 = {proje, t2dagger2, t24};
  list<shared_ptr<Operator>> eb15 = {proje, t2dagger3, t20};
  list<shared_ptr<Operator>> eb16 = {proje, t2dagger3, t21};
  list<shared_ptr<Operator>> eb17 = {proje, t2dagger3, t22};
  list<shared_ptr<Operator>> eb18 = {proje, t2dagger3, t23};
  list<shared_ptr<Operator>> eb19 = {proje, t2dagger3, t24};
  list<shared_ptr<Operator>> eb20 = {proje, t2dagger4, t20};
  list<shared_ptr<Operator>> eb21 = {proje, t2dagger4, t21};
  list<shared_ptr<Operator>> eb22 = {proje, t2dagger4, t22};
  list<shared_ptr<Operator>> eb23 = {proje, t2dagger4, t23};
  list<shared_ptr<Operator>> eb24 = {proje, t2dagger4, t24};
  list<shared_ptr<Operator>> ec0 = {proje, t2dagger0, v2};
  list<shared_ptr<Operator>> ec1 = {proje, t2dagger1, v2};
  list<shared_ptr<Operator>> ec2 = {proje, t2dagger2, v2};
  list<shared_ptr<Operator>> ec3 = {proje, t2dagger3, v2};
  list<shared_ptr<Operator>> ec4 = {proje, t2dagger4, v2};
  list<shared_ptr<Operator>> ed0 = {proje, t2dagger0, h1};
  list<shared_ptr<Operator>> ed1 = {proje, t2dagger1, h1};
  list<shared_ptr<Operator>> ed2 = {proje, t2dagger2, h1};
  list<shared_ptr<Operator>> ed3 = {proje, t2dagger3, h1};
  list<shared_ptr<Operator>> ed4 = {proje, t2dagger4, h1};
  auto dea0 = make_shared<Diagram>(ea0, 0.25);
  auto dea1 = make_shared<Diagram>(ea1, 0.25);
  auto dea2 = make_shared<Diagram>(ea2, 0.25);
  auto dea3 = make_shared<Diagram>(ea3, 0.25);
  auto dea4 = make_shared<Diagram>(ea4, 0.25);
  auto dea5 = make_shared<Diagram>(ea5, 0.25);
  auto dea6 = make_shared<Diagram>(ea6, 0.25);
  auto dea7 = make_shared<Diagram>(ea7, 0.25);
  auto dea8 = make_shared<Diagram>(ea8, 0.25);
  auto dea9 = make_shared<Diagram>(ea9, 0.25);
  auto dea10 = make_shared<Diagram>(ea10, 0.25);
  auto dea11 = make_shared<Diagram>(ea11, 0.25);
  auto dea12 = make_shared<Diagram>(ea12, 0.25);
  auto dea13 = make_shared<Diagram>(ea13, 0.25);
  auto dea14 = make_shared<Diagram>(ea14, 0.25);
  auto dea15 = make_shared<Diagram>(ea15, 0.25);
  auto dea16 = make_shared<Diagram>(ea16, 0.25);
  auto dea17 = make_shared<Diagram>(ea17, 0.25);
  auto dea18 = make_shared<Diagram>(ea18, 0.25);
  auto dea19 = make_shared<Diagram>(ea19, 0.25);
  auto dea20 = make_shared<Diagram>(ea20, 0.25);
  auto dea21 = make_shared<Diagram>(ea21, 0.25);
  auto dea22 = make_shared<Diagram>(ea22, 0.25);
  auto dea23 = make_shared<Diagram>(ea23, 0.25);
  auto dea24 = make_shared<Diagram>(ea24, 0.25);
  auto deb0 = make_shared<Diagram>(eb0, -0.25, "e0");
  auto deb1 = make_shared<Diagram>(eb1, -0.25, "e0");
  auto deb2 = make_shared<Diagram>(eb2, -0.25, "e0");
  auto deb3 = make_shared<Diagram>(eb3, -0.25, "e0");
  auto deb4 = make_shared<Diagram>(eb4, -0.25, "e0");
  auto deb5 = make_shared<Diagram>(eb5, -0.25, "e0");
  auto deb6 = make_shared<Diagram>(eb6, -0.25, "e0");
  auto deb7 = make_shared<Diagram>(eb7, -0.25, "e0");
  auto deb8 = make_shared<Diagram>(eb8, -0.25, "e0");
  auto deb9 = make_shared<Diagram>(eb9, -0.25, "e0");
  auto deb10 = make_shared<Diagram>(eb10, -0.25, "e0");
  auto deb11 = make_shared<Diagram>(eb11, -0.25, "e0");
  auto deb12 = make_shared<Diagram>(eb12, -0.25, "e0");
  auto deb13 = make_shared<Diagram>(eb13, -0.25, "e0");
  auto deb14 = make_shared<Diagram>(eb14, -0.25, "e0");
  auto deb15 = make_shared<Diagram>(eb15, -0.25, "e0");
  auto deb16 = make_shared<Diagram>(eb16, -0.25, "e0");
  auto deb17 = make_shared<Diagram>(eb17, -0.25, "e0");
  auto deb18 = make_shared<Diagram>(eb18, -0.25, "e0");
  auto deb19 = make_shared<Diagram>(eb19, -0.25, "e0");
  auto deb20 = make_shared<Diagram>(eb20, -0.25, "e0");
  auto deb21 = make_shared<Diagram>(eb21, -0.25, "e0");
  auto deb22 = make_shared<Diagram>(eb22, -0.25, "e0");
  auto deb23 = make_shared<Diagram>(eb23, -0.25, "e0");
  auto deb24 = make_shared<Diagram>(eb24, -0.25, "e0");
  auto dec0 = make_shared<Diagram>(ec0, 0.5);
  auto dec1 = make_shared<Diagram>(ec1, 0.5);
  auto dec2 = make_shared<Diagram>(ec2, 0.5);
  auto dec3 = make_shared<Diagram>(ec3, 0.5);
  auto dec4 = make_shared<Diagram>(ec4, 0.5);
  auto ded0 = make_shared<Diagram>(ed0, 0.5);
  auto ded1 = make_shared<Diagram>(ed1, 0.5);
  auto ded2 = make_shared<Diagram>(ed2, 0.5);
  auto ded3 = make_shared<Diagram>(ed3, 0.5);
  auto ded4 = make_shared<Diagram>(ed4, 0.5);
  auto eea0 = make_shared<Equation>(dea0, theory);
  auto eea1 = make_shared<Equation>(dea1, theory);
  auto eea2 = make_shared<Equation>(dea2, theory);
  auto eea3 = make_shared<Equation>(dea3, theory);
  auto eea4 = make_shared<Equation>(dea4, theory);
  auto eea5 = make_shared<Equation>(dea5, theory);
  auto eea6 = make_shared<Equation>(dea6, theory);
  auto eea7 = make_shared<Equation>(dea7, theory);
  auto eea8 = make_shared<Equation>(dea8, theory);
  auto eea9 = make_shared<Equation>(dea9, theory);
  auto eea10 = make_shared<Equation>(dea10, theory);
  auto eea11 = make_shared<Equation>(dea11, theory);
  auto eea12 = make_shared<Equation>(dea12, theory);
  auto eea13 = make_shared<Equation>(dea13, theory);
  auto eea14 = make_shared<Equation>(dea14, theory);
  auto eea15 = make_shared<Equation>(dea15, theory);
  auto eea16 = make_shared<Equation>(dea16, theory);
  auto eea17 = make_shared<Equation>(dea17, theory);
  auto eea18 = make_shared<Equation>(dea18, theory);
  auto eea19 = make_shared<Equation>(dea19, theory);
  auto eea20 = make_shared<Equation>(dea20, theory);
  auto eea21 = make_shared<Equation>(dea21, theory);
  auto eea22 = make_shared<Equation>(dea22, theory);
  auto eea23 = make_shared<Equation>(dea23, theory);
  auto eea24 = make_shared<Equation>(dea24, theory);
  auto eeb0 = make_shared<Equation>(deb0, theory);
  auto eeb1 = make_shared<Equation>(deb1, theory);
  auto eeb2 = make_shared<Equation>(deb2, theory);
  auto eeb3 = make_shared<Equation>(deb3, theory);
  auto eeb4 = make_shared<Equation>(deb4, theory);
  auto eeb5 = make_shared<Equation>(deb5, theory);
  auto eeb6 = make_shared<Equation>(deb6, theory);
  auto eeb7 = make_shared<Equation>(deb7, theory);
  auto eeb8 = make_shared<Equation>(deb8, theory);
  auto eeb9 = make_shared<Equation>(deb9, theory);
  auto eeb10 = make_shared<Equation>(deb10, theory);
  auto eeb11 = make_shared<Equation>(deb11, theory);
  auto eeb12 = make_shared<Equation>(deb12, theory);
  auto eeb13 = make_shared<Equation>(deb13, theory);
  auto eeb14 = make_shared<Equation>(deb14, theory);
  auto eeb15 = make_shared<Equation>(deb15, theory);
  auto eeb16 = make_shared<Equation>(deb16, theory);
  auto eeb17 = make_shared<Equation>(deb17, theory);
  auto eeb18 = make_shared<Equation>(deb18, theory);
  auto eeb19 = make_shared<Equation>(deb19, theory);
  auto eeb20 = make_shared<Equation>(deb20, theory);
  auto eeb21 = make_shared<Equation>(deb21, theory);
  auto eeb22 = make_shared<Equation>(deb22, theory);
  auto eeb23 = make_shared<Equation>(deb23, theory);
  auto eeb24 = make_shared<Equation>(deb24, theory);
  auto eec0 = make_shared<Equation>(dec0, theory);
  auto eec1 = make_shared<Equation>(dec1, theory);
  auto eec2 = make_shared<Equation>(dec2, theory);
  auto eec3 = make_shared<Equation>(dec3, theory);
  auto eec4 = make_shared<Equation>(dec4, theory);
  auto eed0 = make_shared<Equation>(ded0, theory);
  auto eed1 = make_shared<Equation>(ded1, theory);
  auto eed2 = make_shared<Equation>(ded2, theory);
  auto eed3 = make_shared<Equation>(ded3, theory);
  auto eed4 = make_shared<Equation>(ded4, theory);
  eea0->merge(eea1);
  eea0->merge(eea2);
  eea0->merge(eea3);
  eea0->merge(eea4);
  eea0->merge(eea5);
  eea0->merge(eea6);
  eea0->merge(eea7);
  eea0->merge(eea8);
  eea0->merge(eea9);
  eea0->merge(eea10);
  eea0->merge(eea11);
  eea0->merge(eea12);
  eea0->merge(eea13);
  eea0->merge(eea14);
  eea0->merge(eea15);
  eea0->merge(eea16);
  eea0->merge(eea17);
  eea0->merge(eea18);
  eea0->merge(eea19);
  eea0->merge(eea20);
  eea0->merge(eea21);
  eea0->merge(eea22);
  eea0->merge(eea23);
  eea0->merge(eea24);
  eea0->merge(eeb0);
  eea0->merge(eeb1);
  eea0->merge(eeb2);
  eea0->merge(eeb3);
  eea0->merge(eeb4);
  eea0->merge(eeb5);
  eea0->merge(eeb6);
  eea0->merge(eeb7);
  eea0->merge(eeb8);
  eea0->merge(eeb9);
  eea0->merge(eeb10);
  eea0->merge(eeb11);
  eea0->merge(eeb12);
  eea0->merge(eeb13);
  eea0->merge(eeb14);
  eea0->merge(eeb15);
  eea0->merge(eeb16);
  eea0->merge(eeb17);
  eea0->merge(eeb18);
  eea0->merge(eeb19);
  eea0->merge(eeb20);
  eea0->merge(eeb21);
  eea0->merge(eeb22);
  eea0->merge(eeb23);
  eea0->merge(eeb24);
  eea0->merge(eec0);
  eea0->merge(eec1);
  eea0->merge(eec2);
  eea0->merge(eec3);
  eea0->merge(eec4);
  eea0->merge(eed0);
  eea0->merge(eed1);
  eea0->merge(eed2);
  eea0->merge(eed3);
  eea0->merge(eed4);
  eea0->duplicates();
  eea0->active();
  auto tea = make_shared<Energy>(eea0, "energy");

  list<shared_ptr<Operator>> ca0 = {proje, t2dagger0, t20};
  list<shared_ptr<Operator>> ca1 = {proje, t2dagger0, t21};
  list<shared_ptr<Operator>> ca2 = {proje, t2dagger0, t22};
  list<shared_ptr<Operator>> ca3 = {proje, t2dagger0, t23};
  list<shared_ptr<Operator>> ca4 = {proje, t2dagger0, t24};
  list<shared_ptr<Operator>> ca5 = {proje, t2dagger1, t20};
  list<shared_ptr<Operator>> ca6 = {proje, t2dagger1, t21};
  list<shared_ptr<Operator>> ca7 = {proje, t2dagger1, t22};
  list<shared_ptr<Operator>> ca8 = {proje, t2dagger1, t23};
  list<shared_ptr<Operator>> ca9 = {proje, t2dagger1, t24};
  list<shared_ptr<Operator>> ca10 = {proje, t2dagger2, t20};
  list<shared_ptr<Operator>> ca11 = {proje, t2dagger2, t21};
  list<shared_ptr<Operator>> ca12 = {proje, t2dagger2, t22};
  list<shared_ptr<Operator>> ca13 = {proje, t2dagger2, t23};
  list<shared_ptr<Operator>> ca14 = {proje, t2dagger2, t24};
  list<shared_ptr<Operator>> ca15 = {proje, t2dagger3, t20};
  list<shared_ptr<Operator>> ca16 = {proje, t2dagger3, t21};
  list<shared_ptr<Operator>> ca17 = {proje, t2dagger3, t22};
  list<shared_ptr<Operator>> ca18 = {proje, t2dagger3, t23};
  list<shared_ptr<Operator>> ca19 = {proje, t2dagger3, t24};
  list<shared_ptr<Operator>> ca20 = {proje, t2dagger4, t20};
  list<shared_ptr<Operator>> ca21 = {proje, t2dagger4, t21};
  list<shared_ptr<Operator>> ca22 = {proje, t2dagger4, t22};
  list<shared_ptr<Operator>> ca23 = {proje, t2dagger4, t23};
  list<shared_ptr<Operator>> ca24 = {proje, t2dagger4, t24};
  auto dca0 = make_shared<Diagram>(ca0, 0.25);
  auto dca1 = make_shared<Diagram>(ca1, 0.25);
  auto dca2 = make_shared<Diagram>(ca2, 0.25);
  auto dca3 = make_shared<Diagram>(ca3, 0.25);
  auto dca4 = make_shared<Diagram>(ca4, 0.25);
  auto dca5 = make_shared<Diagram>(ca5, 0.25);
  auto dca6 = make_shared<Diagram>(ca6, 0.25);
  auto dca7 = make_shared<Diagram>(ca7, 0.25);
  auto dca8 = make_shared<Diagram>(ca8, 0.25);
  auto dca9 = make_shared<Diagram>(ca9, 0.25);
  auto dca10 = make_shared<Diagram>(ca10, 0.25);
  auto dca11 = make_shared<Diagram>(ca11, 0.25);
  auto dca12 = make_shared<Diagram>(ca12, 0.25);
  auto dca13 = make_shared<Diagram>(ca13, 0.25);
  auto dca14 = make_shared<Diagram>(ca14, 0.25);
  auto dca15 = make_shared<Diagram>(ca15, 0.25);
  auto dca16 = make_shared<Diagram>(ca16, 0.25);
  auto dca17 = make_shared<Diagram>(ca17, 0.25);
  auto dca18 = make_shared<Diagram>(ca18, 0.25);
  auto dca19 = make_shared<Diagram>(ca19, 0.25);
  auto dca20 = make_shared<Diagram>(ca20, 0.25);
  auto dca21 = make_shared<Diagram>(ca21, 0.25);
  auto dca22 = make_shared<Diagram>(ca22, 0.25);
  auto dca23 = make_shared<Diagram>(ca23, 0.25);
  auto dca24 = make_shared<Diagram>(ca24, 0.25);
  auto eca0 = make_shared<Equation>(dca0, theory);
  auto eca1 = make_shared<Equation>(dca1, theory);
  auto eca2 = make_shared<Equation>(dca2, theory);
  auto eca3 = make_shared<Equation>(dca3, theory);
  auto eca4 = make_shared<Equation>(dca4, theory);
  auto eca5 = make_shared<Equation>(dca5, theory);
  auto eca6 = make_shared<Equation>(dca6, theory);
  auto eca7 = make_shared<Equation>(dca7, theory);
  auto eca8 = make_shared<Equation>(dca8, theory);
  auto eca9 = make_shared<Equation>(dca9, theory);
  auto eca10 = make_shared<Equation>(dca10, theory);
  auto eca11 = make_shared<Equation>(dca11, theory);
  auto eca12 = make_shared<Equation>(dca12, theory);
  auto eca13 = make_shared<Equation>(dca13, theory);
  auto eca14 = make_shared<Equation>(dca14, theory);
  auto eca15 = make_shared<Equation>(dca15, theory);
  auto eca16 = make_shared<Equation>(dca16, theory);
  auto eca17 = make_shared<Equation>(dca17, theory);
  auto eca18 = make_shared<Equation>(dca18, theory);
  auto eca19 = make_shared<Equation>(dca19, theory);
  auto eca20 = make_shared<Equation>(dca20, theory);
  auto eca21 = make_shared<Equation>(dca21, theory);
  auto eca22 = make_shared<Equation>(dca22, theory);
  auto eca23 = make_shared<Equation>(dca23, theory);
  auto eca24 = make_shared<Equation>(dca24, theory);
  eca0->merge(eca1);
  eca0->merge(eca2);
  eca0->merge(eca3);
  eca0->merge(eca4);
  eca0->merge(eca5);
  eca0->merge(eca6);
  eca0->merge(eca7);
  eca0->merge(eca8);
  eca0->merge(eca9);
  eca0->merge(eca10);
  eca0->merge(eca11);
  eca0->merge(eca12);
  eca0->merge(eca13);
  eca0->merge(eca14);
  eca0->merge(eca15);
  eca0->merge(eca16);
  eca0->merge(eca17);
  eca0->merge(eca18);
  eca0->merge(eca19);
  eca0->merge(eca20);
  eca0->merge(eca21);
  eca0->merge(eca22);
  eca0->merge(eca23);
  eca0->merge(eca24);
  eca0->duplicates();
  eca0->active();
  auto tca = make_shared<Correction>(eca0, "correction");

  list<shared_ptr<Operator>> da0 = {proje, t2dagger0, ex_1b, t20};
  list<shared_ptr<Operator>> da1 = {proje, t2dagger0, ex_1b, t21};
  list<shared_ptr<Operator>> da2 = {proje, t2dagger0, ex_1b, t22};
  list<shared_ptr<Operator>> da3 = {proje, t2dagger0, ex_1b, t23};
  list<shared_ptr<Operator>> da4 = {proje, t2dagger0, ex_1b, t24};
  list<shared_ptr<Operator>> da5 = {proje, t2dagger1, ex_1b, t20};
  list<shared_ptr<Operator>> da6 = {proje, t2dagger1, ex_1b, t21};
  list<shared_ptr<Operator>> da7 = {proje, t2dagger1, ex_1b, t22};
  list<shared_ptr<Operator>> da8 = {proje, t2dagger1, ex_1b, t23};
  list<shared_ptr<Operator>> da9 = {proje, t2dagger1, ex_1b, t24};
  list<shared_ptr<Operator>> da10 = {proje, t2dagger2, ex_1b, t20};
  list<shared_ptr<Operator>> da11 = {proje, t2dagger2, ex_1b, t21};
  list<shared_ptr<Operator>> da12 = {proje, t2dagger2, ex_1b, t22};
  list<shared_ptr<Operator>> da13 = {proje, t2dagger2, ex_1b, t23};
  list<shared_ptr<Operator>> da14 = {proje, t2dagger2, ex_1b, t24};
  list<shared_ptr<Operator>> da15 = {proje, t2dagger3, ex_1b, t20};
  list<shared_ptr<Operator>> da16 = {proje, t2dagger3, ex_1b, t21};
  list<shared_ptr<Operator>> da17 = {proje, t2dagger3, ex_1b, t22};
  list<shared_ptr<Operator>> da18 = {proje, t2dagger3, ex_1b, t23};
  list<shared_ptr<Operator>> da19 = {proje, t2dagger3, ex_1b, t24};
  list<shared_ptr<Operator>> da20 = {proje, t2dagger4, ex_1b, t20};
  list<shared_ptr<Operator>> da21 = {proje, t2dagger4, ex_1b, t21};
  list<shared_ptr<Operator>> da22 = {proje, t2dagger4, ex_1b, t22};
  list<shared_ptr<Operator>> da23 = {proje, t2dagger4, ex_1b, t23};
  list<shared_ptr<Operator>> da24 = {proje, t2dagger4, ex_1b, t24};
  auto dda0 = make_shared<Diagram>(da0, 0.25);
  auto dda1 = make_shared<Diagram>(da1, 0.25);
  auto dda2 = make_shared<Diagram>(da2, 0.25);
  auto dda3 = make_shared<Diagram>(da3, 0.25);
  auto dda4 = make_shared<Diagram>(da4, 0.25);
  auto dda5 = make_shared<Diagram>(da5, 0.25);
  auto dda6 = make_shared<Diagram>(da6, 0.25);
  auto dda7 = make_shared<Diagram>(da7, 0.25);
  auto dda8 = make_shared<Diagram>(da8, 0.25);
  auto dda9 = make_shared<Diagram>(da9, 0.25);
  auto dda10 = make_shared<Diagram>(da10, 0.25);
  auto dda11 = make_shared<Diagram>(da11, 0.25);
  auto dda12 = make_shared<Diagram>(da12, 0.25);
  auto dda13 = make_shared<Diagram>(da13, 0.25);
  auto dda14 = make_shared<Diagram>(da14, 0.25);
  auto dda15 = make_shared<Diagram>(da15, 0.25);
  auto dda16 = make_shared<Diagram>(da16, 0.25);
  auto dda17 = make_shared<Diagram>(da17, 0.25);
  auto dda18 = make_shared<Diagram>(da18, 0.25);
  auto dda19 = make_shared<Diagram>(da19, 0.25);
  auto dda20 = make_shared<Diagram>(da20, 0.25);
  auto dda21 = make_shared<Diagram>(da21, 0.25);
  auto dda22 = make_shared<Diagram>(da22, 0.25);
  auto dda23 = make_shared<Diagram>(da23, 0.25);
  auto dda24 = make_shared<Diagram>(da24, 0.25);
  auto eda0 = make_shared<Equation>(dda0, theory);
  auto eda1 = make_shared<Equation>(dda1, theory);
  auto eda2 = make_shared<Equation>(dda2, theory);
  auto eda3 = make_shared<Equation>(dda3, theory);
  auto eda4 = make_shared<Equation>(dda4, theory);
  auto eda5 = make_shared<Equation>(dda5, theory);
  auto eda6 = make_shared<Equation>(dda6, theory);
  auto eda7 = make_shared<Equation>(dda7, theory);
  auto eda8 = make_shared<Equation>(dda8, theory);
  auto eda9 = make_shared<Equation>(dda9, theory);
  auto eda10 = make_shared<Equation>(dda10, theory);
  auto eda11 = make_shared<Equation>(dda11, theory);
  auto eda12 = make_shared<Equation>(dda12, theory);
  auto eda13 = make_shared<Equation>(dda13, theory);
  auto eda14 = make_shared<Equation>(dda14, theory);
  auto eda15 = make_shared<Equation>(dda15, theory);
  auto eda16 = make_shared<Equation>(dda16, theory);
  auto eda17 = make_shared<Equation>(dda17, theory);
  auto eda18 = make_shared<Equation>(dda18, theory);
  auto eda19 = make_shared<Equation>(dda19, theory);
  auto eda20 = make_shared<Equation>(dda20, theory);
  auto eda21 = make_shared<Equation>(dda21, theory);
  auto eda22 = make_shared<Equation>(dda22, theory);
  auto eda23 = make_shared<Equation>(dda23, theory);
  auto eda24 = make_shared<Equation>(dda24, theory);
  eda0->merge(eda1);
  eda0->merge(eda2);
  eda0->merge(eda3);
  eda0->merge(eda4);
  eda0->merge(eda5);
  eda0->merge(eda6);
  eda0->merge(eda7);
  eda0->merge(eda8);
  eda0->merge(eda9);
  eda0->merge(eda10);
  eda0->merge(eda11);
  eda0->merge(eda12);
  eda0->merge(eda13);
  eda0->merge(eda14);
  eda0->merge(eda15);
  eda0->merge(eda16);
  eda0->merge(eda17);
  eda0->merge(eda18);
  eda0->merge(eda19);
  eda0->merge(eda20);
  eda0->merge(eda21);
  eda0->merge(eda22);
  eda0->merge(eda23);
  eda0->merge(eda24);
  eda0->duplicates();
  eda0->active();
  auto tda = make_shared<Density>(eda0, "density");

  list<shared_ptr<Operator>> db0 = {proje, ex_1b, t20};
  list<shared_ptr<Operator>> db1 = {proje, ex_1b, t21};
  list<shared_ptr<Operator>> db2 = {proje, ex_1b, t22};
  list<shared_ptr<Operator>> db3 = {proje, ex_1b, t23};
  list<shared_ptr<Operator>> db4 = {proje, ex_1b, t24};
  auto ddb0 = make_shared<Diagram>(db0);
  auto ddb1 = make_shared<Diagram>(db1);
  auto ddb2 = make_shared<Diagram>(db2);
  auto ddb3 = make_shared<Diagram>(db3);
  auto ddb4 = make_shared<Diagram>(db4);
  auto edb0 = make_shared<Equation>(ddb0, theory);
  auto edb1 = make_shared<Equation>(ddb1, theory);
  auto edb2 = make_shared<Equation>(ddb2, theory);
  auto edb3 = make_shared<Equation>(ddb3, theory);
  auto edb4 = make_shared<Equation>(ddb4, theory);
  edb0->merge(edb1);
  edb0->merge(edb2);
  edb0->merge(edb3);
  edb0->merge(edb4);
  edb0->duplicates();
  edb0->active();
  auto tdb = make_shared<Density1>(edb0, "density1");

  list<shared_ptr<Operator>> d2a0 = {proje, ex_0, t20};
  list<shared_ptr<Operator>> d2a1 = {proje, ex_0, t21};
  list<shared_ptr<Operator>> d2a2 = {proje, ex_0, t22};
  list<shared_ptr<Operator>> d2a3 = {proje, ex_0, t23};
  list<shared_ptr<Operator>> d2a4 = {proje, ex_0, t24};
  list<shared_ptr<Operator>> d2a5 = {proje, ex_1, t20};
  list<shared_ptr<Operator>> d2a6 = {proje, ex_1, t21};
  list<shared_ptr<Operator>> d2a7 = {proje, ex_1, t22};
  list<shared_ptr<Operator>> d2a8 = {proje, ex_1, t23};
  list<shared_ptr<Operator>> d2a9 = {proje, ex_1, t24};
  list<shared_ptr<Operator>> d2a10 = {proje, ex_2, t20};
  list<shared_ptr<Operator>> d2a11 = {proje, ex_2, t21};
  list<shared_ptr<Operator>> d2a12 = {proje, ex_2, t22};
  list<shared_ptr<Operator>> d2a13 = {proje, ex_2, t23};
  list<shared_ptr<Operator>> d2a14 = {proje, ex_2, t24};
  list<shared_ptr<Operator>> d2a15 = {proje, ex_3, t20};
  list<shared_ptr<Operator>> d2a16 = {proje, ex_3, t21};
  list<shared_ptr<Operator>> d2a17 = {proje, ex_3, t22};
  list<shared_ptr<Operator>> d2a18 = {proje, ex_3, t23};
  list<shared_ptr<Operator>> d2a19 = {proje, ex_3, t24};
  list<shared_ptr<Operator>> d2a20 = {proje, ex_4, t20};
  list<shared_ptr<Operator>> d2a21 = {proje, ex_4, t21};
  list<shared_ptr<Operator>> d2a22 = {proje, ex_4, t22};
  list<shared_ptr<Operator>> d2a23 = {proje, ex_4, t23};
  list<shared_ptr<Operator>> d2a24 = {proje, ex_4, t24};
  auto dd2a0 = make_shared<Diagram>(d2a0, 0.5);
  auto dd2a1 = make_shared<Diagram>(d2a1, 0.5);
  auto dd2a2 = make_shared<Diagram>(d2a2, 0.5);
  auto dd2a3 = make_shared<Diagram>(d2a3, 0.5);
  auto dd2a4 = make_shared<Diagram>(d2a4, 0.5);
  auto dd2a5 = make_shared<Diagram>(d2a5, 0.5);
  auto dd2a6 = make_shared<Diagram>(d2a6, 0.5);
  auto dd2a7 = make_shared<Diagram>(d2a7, 0.5);
  auto dd2a8 = make_shared<Diagram>(d2a8, 0.5);
  auto dd2a9 = make_shared<Diagram>(d2a9, 0.5);
  auto dd2a10 = make_shared<Diagram>(d2a10, 0.5);
  auto dd2a11 = make_shared<Diagram>(d2a11, 0.5);
  auto dd2a12 = make_shared<Diagram>(d2a12, 0.5);
  auto dd2a13 = make_shared<Diagram>(d2a13, 0.5);
  auto dd2a14 = make_shared<Diagram>(d2a14, 0.5);
  auto dd2a15 = make_shared<Diagram>(d2a15, 0.5);
  auto dd2a16 = make_shared<Diagram>(d2a16, 0.5);
  auto dd2a17 = make_shared<Diagram>(d2a17, 0.5);
  auto dd2a18 = make_shared<Diagram>(d2a18, 0.5);
  auto dd2a19 = make_shared<Diagram>(d2a19, 0.5);
  auto dd2a20 = make_shared<Diagram>(d2a20, 0.5);
  auto dd2a21 = make_shared<Diagram>(d2a21, 0.5);
  auto dd2a22 = make_shared<Diagram>(d2a22, 0.5);
  auto dd2a23 = make_shared<Diagram>(d2a23, 0.5);
  auto dd2a24 = make_shared<Diagram>(d2a24, 0.5);
  auto ed2a0 = make_shared<Equation>(dd2a0, theory);
  auto ed2a1 = make_shared<Equation>(dd2a1, theory);
  auto ed2a2 = make_shared<Equation>(dd2a2, theory);
  auto ed2a3 = make_shared<Equation>(dd2a3, theory);
  auto ed2a4 = make_shared<Equation>(dd2a4, theory);
  auto ed2a5 = make_shared<Equation>(dd2a5, theory);
  auto ed2a6 = make_shared<Equation>(dd2a6, theory);
  auto ed2a7 = make_shared<Equation>(dd2a7, theory);
  auto ed2a8 = make_shared<Equation>(dd2a8, theory);
  auto ed2a9 = make_shared<Equation>(dd2a9, theory);
  auto ed2a10 = make_shared<Equation>(dd2a10, theory);
  auto ed2a11 = make_shared<Equation>(dd2a11, theory);
  auto ed2a12 = make_shared<Equation>(dd2a12, theory);
  auto ed2a13 = make_shared<Equation>(dd2a13, theory);
  auto ed2a14 = make_shared<Equation>(dd2a14, theory);
  auto ed2a15 = make_shared<Equation>(dd2a15, theory);
  auto ed2a16 = make_shared<Equation>(dd2a16, theory);
  auto ed2a17 = make_shared<Equation>(dd2a17, theory);
  auto ed2a18 = make_shared<Equation>(dd2a18, theory);
  auto ed2a19 = make_shared<Equation>(dd2a19, theory);
  auto ed2a20 = make_shared<Equation>(dd2a20, theory);
  auto ed2a21 = make_shared<Equation>(dd2a21, theory);
  auto ed2a22 = make_shared<Equation>(dd2a22, theory);
  auto ed2a23 = make_shared<Equation>(dd2a23, theory);
  auto ed2a24 = make_shared<Equation>(dd2a24, theory);
  ed2a0->merge(ed2a1);
  ed2a0->merge(ed2a2);
  ed2a0->merge(ed2a3);
  ed2a0->merge(ed2a4);
  ed2a0->merge(ed2a5);
  ed2a0->merge(ed2a6);
  ed2a0->merge(ed2a7);
  ed2a0->merge(ed2a8);
  ed2a0->merge(ed2a9);
  ed2a0->merge(ed2a10);
  ed2a0->merge(ed2a11);
  ed2a0->merge(ed2a12);
  ed2a0->merge(ed2a13);
  ed2a0->merge(ed2a14);
  ed2a0->merge(ed2a15);
  ed2a0->merge(ed2a16);
  ed2a0->merge(ed2a17);
  ed2a0->merge(ed2a18);
  ed2a0->merge(ed2a19);
  ed2a0->merge(ed2a20);
  ed2a0->merge(ed2a21);
  ed2a0->merge(ed2a22);
  ed2a0->merge(ed2a23);
  ed2a0->merge(ed2a24);
  ed2a0->duplicates();
  ed2a0->active();
  auto td2a = make_shared<Density2>(ed2a0, "density2");

  list<shared_ptr<Operator>> dedcia0 = {proje, t2dagger0, f1, t20};
  list<shared_ptr<Operator>> dedcia1 = {proje, t2dagger0, f1, t21};
  list<shared_ptr<Operator>> dedcia2 = {proje, t2dagger0, f1, t22};
  list<shared_ptr<Operator>> dedcia3 = {proje, t2dagger0, f1, t23};
  list<shared_ptr<Operator>> dedcia4 = {proje, t2dagger0, f1, t24};
  list<shared_ptr<Operator>> dedcia5 = {proje, t2dagger1, f1, t20};
  list<shared_ptr<Operator>> dedcia6 = {proje, t2dagger1, f1, t21};
  list<shared_ptr<Operator>> dedcia7 = {proje, t2dagger1, f1, t22};
  list<shared_ptr<Operator>> dedcia8 = {proje, t2dagger1, f1, t23};
  list<shared_ptr<Operator>> dedcia9 = {proje, t2dagger1, f1, t24};
  list<shared_ptr<Operator>> dedcia10 = {proje, t2dagger2, f1, t20};
  list<shared_ptr<Operator>> dedcia11 = {proje, t2dagger2, f1, t21};
  list<shared_ptr<Operator>> dedcia12 = {proje, t2dagger2, f1, t22};
  list<shared_ptr<Operator>> dedcia13 = {proje, t2dagger2, f1, t23};
  list<shared_ptr<Operator>> dedcia14 = {proje, t2dagger2, f1, t24};
  list<shared_ptr<Operator>> dedcia15 = {proje, t2dagger3, f1, t20};
  list<shared_ptr<Operator>> dedcia16 = {proje, t2dagger3, f1, t21};
  list<shared_ptr<Operator>> dedcia17 = {proje, t2dagger3, f1, t22};
  list<shared_ptr<Operator>> dedcia18 = {proje, t2dagger3, f1, t23};
  list<shared_ptr<Operator>> dedcia19 = {proje, t2dagger3, f1, t24};
  list<shared_ptr<Operator>> dedcia20 = {proje, t2dagger4, f1, t20};
  list<shared_ptr<Operator>> dedcia21 = {proje, t2dagger4, f1, t21};
  list<shared_ptr<Operator>> dedcia22 = {proje, t2dagger4, f1, t22};
  list<shared_ptr<Operator>> dedcia23 = {proje, t2dagger4, f1, t23};
  list<shared_ptr<Operator>> dedcia24 = {proje, t2dagger4, f1, t24};
  list<shared_ptr<Operator>> dedcib0 = {proje, t2dagger0, f1, t20};
  list<shared_ptr<Operator>> dedcib1 = {proje, t2dagger0, f1, t21};
  list<shared_ptr<Operator>> dedcib2 = {proje, t2dagger0, f1, t22};
  list<shared_ptr<Operator>> dedcib3 = {proje, t2dagger0, f1, t23};
  list<shared_ptr<Operator>> dedcib4 = {proje, t2dagger0, f1, t24};
  list<shared_ptr<Operator>> dedcib5 = {proje, t2dagger1, f1, t20};
  list<shared_ptr<Operator>> dedcib6 = {proje, t2dagger1, f1, t21};
  list<shared_ptr<Operator>> dedcib7 = {proje, t2dagger1, f1, t22};
  list<shared_ptr<Operator>> dedcib8 = {proje, t2dagger1, f1, t23};
  list<shared_ptr<Operator>> dedcib9 = {proje, t2dagger1, f1, t24};
  list<shared_ptr<Operator>> dedcib10 = {proje, t2dagger2, f1, t20};
  list<shared_ptr<Operator>> dedcib11 = {proje, t2dagger2, f1, t21};
  list<shared_ptr<Operator>> dedcib12 = {proje, t2dagger2, f1, t22};
  list<shared_ptr<Operator>> dedcib13 = {proje, t2dagger2, f1, t23};
  list<shared_ptr<Operator>> dedcib14 = {proje, t2dagger2, f1, t24};
  list<shared_ptr<Operator>> dedcib15 = {proje, t2dagger3, f1, t20};
  list<shared_ptr<Operator>> dedcib16 = {proje, t2dagger3, f1, t21};
  list<shared_ptr<Operator>> dedcib17 = {proje, t2dagger3, f1, t22};
  list<shared_ptr<Operator>> dedcib18 = {proje, t2dagger3, f1, t23};
  list<shared_ptr<Operator>> dedcib19 = {proje, t2dagger3, f1, t24};
  list<shared_ptr<Operator>> dedcib20 = {proje, t2dagger4, f1, t20};
  list<shared_ptr<Operator>> dedcib21 = {proje, t2dagger4, f1, t21};
  list<shared_ptr<Operator>> dedcib22 = {proje, t2dagger4, f1, t22};
  list<shared_ptr<Operator>> dedcib23 = {proje, t2dagger4, f1, t23};
  list<shared_ptr<Operator>> dedcib24 = {proje, t2dagger4, f1, t24};
  list<shared_ptr<Operator>> dedcic0 = {proje, t2dagger0, t20};
  list<shared_ptr<Operator>> dedcic1 = {proje, t2dagger0, t21};
  list<shared_ptr<Operator>> dedcic2 = {proje, t2dagger0, t22};
  list<shared_ptr<Operator>> dedcic3 = {proje, t2dagger0, t23};
  list<shared_ptr<Operator>> dedcic4 = {proje, t2dagger0, t24};
  list<shared_ptr<Operator>> dedcic5 = {proje, t2dagger1, t20};
  list<shared_ptr<Operator>> dedcic6 = {proje, t2dagger1, t21};
  list<shared_ptr<Operator>> dedcic7 = {proje, t2dagger1, t22};
  list<shared_ptr<Operator>> dedcic8 = {proje, t2dagger1, t23};
  list<shared_ptr<Operator>> dedcic9 = {proje, t2dagger1, t24};
  list<shared_ptr<Operator>> dedcic10 = {proje, t2dagger2, t20};
  list<shared_ptr<Operator>> dedcic11 = {proje, t2dagger2, t21};
  list<shared_ptr<Operator>> dedcic12 = {proje, t2dagger2, t22};
  list<shared_ptr<Operator>> dedcic13 = {proje, t2dagger2, t23};
  list<shared_ptr<Operator>> dedcic14 = {proje, t2dagger2, t24};
  list<shared_ptr<Operator>> dedcic15 = {proje, t2dagger3, t20};
  list<shared_ptr<Operator>> dedcic16 = {proje, t2dagger3, t21};
  list<shared_ptr<Operator>> dedcic17 = {proje, t2dagger3, t22};
  list<shared_ptr<Operator>> dedcic18 = {proje, t2dagger3, t23};
  list<shared_ptr<Operator>> dedcic19 = {proje, t2dagger3, t24};
  list<shared_ptr<Operator>> dedcic20 = {proje, t2dagger4, t20};
  list<shared_ptr<Operator>> dedcic21 = {proje, t2dagger4, t21};
  list<shared_ptr<Operator>> dedcic22 = {proje, t2dagger4, t22};
  list<shared_ptr<Operator>> dedcic23 = {proje, t2dagger4, t23};
  list<shared_ptr<Operator>> dedcic24 = {proje, t2dagger4, t24};
  list<shared_ptr<Operator>> dedcid0 = {proje, t2dagger0, t20};
  list<shared_ptr<Operator>> dedcid1 = {proje, t2dagger0, t21};
  list<shared_ptr<Operator>> dedcid2 = {proje, t2dagger0, t22};
  list<shared_ptr<Operator>> dedcid3 = {proje, t2dagger0, t23};
  list<shared_ptr<Operator>> dedcid4 = {proje, t2dagger0, t24};
  list<shared_ptr<Operator>> dedcid5 = {proje, t2dagger1, t20};
  list<shared_ptr<Operator>> dedcid6 = {proje, t2dagger1, t21};
  list<shared_ptr<Operator>> dedcid7 = {proje, t2dagger1, t22};
  list<shared_ptr<Operator>> dedcid8 = {proje, t2dagger1, t23};
  list<shared_ptr<Operator>> dedcid9 = {proje, t2dagger1, t24};
  list<shared_ptr<Operator>> dedcid10 = {proje, t2dagger2, t20};
  list<shared_ptr<Operator>> dedcid11 = {proje, t2dagger2, t21};
  list<shared_ptr<Operator>> dedcid12 = {proje, t2dagger2, t22};
  list<shared_ptr<Operator>> dedcid13 = {proje, t2dagger2, t23};
  list<shared_ptr<Operator>> dedcid14 = {proje, t2dagger2, t24};
  list<shared_ptr<Operator>> dedcid15 = {proje, t2dagger3, t20};
  list<shared_ptr<Operator>> dedcid16 = {proje, t2dagger3, t21};
  list<shared_ptr<Operator>> dedcid17 = {proje, t2dagger3, t22};
  list<shared_ptr<Operator>> dedcid18 = {proje, t2dagger3, t23};
  list<shared_ptr<Operator>> dedcid19 = {proje, t2dagger3, t24};
  list<shared_ptr<Operator>> dedcid20 = {proje, t2dagger4, t20};
  list<shared_ptr<Operator>> dedcid21 = {proje, t2dagger4, t21};
  list<shared_ptr<Operator>> dedcid22 = {proje, t2dagger4, t22};
  list<shared_ptr<Operator>> dedcid23 = {proje, t2dagger4, t23};
  list<shared_ptr<Operator>> dedcid24 = {proje, t2dagger4, t24};
  list<shared_ptr<Operator>> dedcie0 = {proje, t2dagger0, v2};
  list<shared_ptr<Operator>> dedcie1 = {proje, t2dagger1, v2};
  list<shared_ptr<Operator>> dedcie2 = {proje, t2dagger2, v2};
  list<shared_ptr<Operator>> dedcie3 = {proje, t2dagger3, v2};
  list<shared_ptr<Operator>> dedcie4 = {proje, t2dagger4, v2};
  list<shared_ptr<Operator>> dedcif0 = {proje, t2dagger0, v2};
  list<shared_ptr<Operator>> dedcif1 = {proje, t2dagger1, v2};
  list<shared_ptr<Operator>> dedcif2 = {proje, t2dagger2, v2};
  list<shared_ptr<Operator>> dedcif3 = {proje, t2dagger3, v2};
  list<shared_ptr<Operator>> dedcif4 = {proje, t2dagger4, v2};
  list<shared_ptr<Operator>> dedcig0 = {proje, t2dagger0, h1};
  list<shared_ptr<Operator>> dedcig1 = {proje, t2dagger1, h1};
  list<shared_ptr<Operator>> dedcig2 = {proje, t2dagger2, h1};
  list<shared_ptr<Operator>> dedcig3 = {proje, t2dagger3, h1};
  list<shared_ptr<Operator>> dedcig4 = {proje, t2dagger4, h1};
  list<shared_ptr<Operator>> dedcih0 = {proje, t2dagger0, h1};
  list<shared_ptr<Operator>> dedcih1 = {proje, t2dagger1, h1};
  list<shared_ptr<Operator>> dedcih2 = {proje, t2dagger2, h1};
  list<shared_ptr<Operator>> dedcih3 = {proje, t2dagger3, h1};
  list<shared_ptr<Operator>> dedcih4 = {proje, t2dagger4, h1};
  auto ddedcia0 = make_shared<Diagram>(dedcia0, 0.25, make_pair(true, false));
  auto ddedcia1 = make_shared<Diagram>(dedcia1, 0.25, make_pair(true, false));
  auto ddedcia2 = make_shared<Diagram>(dedcia2, 0.25, make_pair(true, false));
  auto ddedcia3 = make_shared<Diagram>(dedcia3, 0.25, make_pair(true, false));
  auto ddedcia4 = make_shared<Diagram>(dedcia4, 0.25, make_pair(true, false));
  auto ddedcia5 = make_shared<Diagram>(dedcia5, 0.25, make_pair(true, false));
  auto ddedcia6 = make_shared<Diagram>(dedcia6, 0.25, make_pair(true, false));
  auto ddedcia7 = make_shared<Diagram>(dedcia7, 0.25, make_pair(true, false));
  auto ddedcia8 = make_shared<Diagram>(dedcia8, 0.25, make_pair(true, false));
  auto ddedcia9 = make_shared<Diagram>(dedcia9, 0.25, make_pair(true, false));
  auto ddedcia10 = make_shared<Diagram>(dedcia10, 0.25, make_pair(true, false));
  auto ddedcia11 = make_shared<Diagram>(dedcia11, 0.25, make_pair(true, false));
  auto ddedcia12 = make_shared<Diagram>(dedcia12, 0.25, make_pair(true, false));
  auto ddedcia13 = make_shared<Diagram>(dedcia13, 0.25, make_pair(true, false));
  auto ddedcia14 = make_shared<Diagram>(dedcia14, 0.25, make_pair(true, false));
  auto ddedcia15 = make_shared<Diagram>(dedcia15, 0.25, make_pair(true, false));
  auto ddedcia16 = make_shared<Diagram>(dedcia16, 0.25, make_pair(true, false));
  auto ddedcia17 = make_shared<Diagram>(dedcia17, 0.25, make_pair(true, false));
  auto ddedcia18 = make_shared<Diagram>(dedcia18, 0.25, make_pair(true, false));
  auto ddedcia19 = make_shared<Diagram>(dedcia19, 0.25, make_pair(true, false));
  auto ddedcia20 = make_shared<Diagram>(dedcia20, 0.25, make_pair(true, false));
  auto ddedcia21 = make_shared<Diagram>(dedcia21, 0.25, make_pair(true, false));
  auto ddedcia22 = make_shared<Diagram>(dedcia22, 0.25, make_pair(true, false));
  auto ddedcia23 = make_shared<Diagram>(dedcia23, 0.25, make_pair(true, false));
  auto ddedcia24 = make_shared<Diagram>(dedcia24, 0.25, make_pair(true, false));
  auto ddedcib0 = make_shared<Diagram>(dedcib0, 0.25, make_pair(false, true));
  auto ddedcib1 = make_shared<Diagram>(dedcib1, 0.25, make_pair(false, true));
  auto ddedcib2 = make_shared<Diagram>(dedcib2, 0.25, make_pair(false, true));
  auto ddedcib3 = make_shared<Diagram>(dedcib3, 0.25, make_pair(false, true));
  auto ddedcib4 = make_shared<Diagram>(dedcib4, 0.25, make_pair(false, true));
  auto ddedcib5 = make_shared<Diagram>(dedcib5, 0.25, make_pair(false, true));
  auto ddedcib6 = make_shared<Diagram>(dedcib6, 0.25, make_pair(false, true));
  auto ddedcib7 = make_shared<Diagram>(dedcib7, 0.25, make_pair(false, true));
  auto ddedcib8 = make_shared<Diagram>(dedcib8, 0.25, make_pair(false, true));
  auto ddedcib9 = make_shared<Diagram>(dedcib9, 0.25, make_pair(false, true));
  auto ddedcib10 = make_shared<Diagram>(dedcib10, 0.25, make_pair(false, true));
  auto ddedcib11 = make_shared<Diagram>(dedcib11, 0.25, make_pair(false, true));
  auto ddedcib12 = make_shared<Diagram>(dedcib12, 0.25, make_pair(false, true));
  auto ddedcib13 = make_shared<Diagram>(dedcib13, 0.25, make_pair(false, true));
  auto ddedcib14 = make_shared<Diagram>(dedcib14, 0.25, make_pair(false, true));
  auto ddedcib15 = make_shared<Diagram>(dedcib15, 0.25, make_pair(false, true));
  auto ddedcib16 = make_shared<Diagram>(dedcib16, 0.25, make_pair(false, true));
  auto ddedcib17 = make_shared<Diagram>(dedcib17, 0.25, make_pair(false, true));
  auto ddedcib18 = make_shared<Diagram>(dedcib18, 0.25, make_pair(false, true));
  auto ddedcib19 = make_shared<Diagram>(dedcib19, 0.25, make_pair(false, true));
  auto ddedcib20 = make_shared<Diagram>(dedcib20, 0.25, make_pair(false, true));
  auto ddedcib21 = make_shared<Diagram>(dedcib21, 0.25, make_pair(false, true));
  auto ddedcib22 = make_shared<Diagram>(dedcib22, 0.25, make_pair(false, true));
  auto ddedcib23 = make_shared<Diagram>(dedcib23, 0.25, make_pair(false, true));
  auto ddedcib24 = make_shared<Diagram>(dedcib24, 0.25, make_pair(false, true));
  auto ddedcic0 = make_shared<Diagram>(dedcic0, -0.25, "e0", make_pair(true, false));
  auto ddedcic1 = make_shared<Diagram>(dedcic1, -0.25, "e0", make_pair(true, false));
  auto ddedcic2 = make_shared<Diagram>(dedcic2, -0.25, "e0", make_pair(true, false));
  auto ddedcic3 = make_shared<Diagram>(dedcic3, -0.25, "e0", make_pair(true, false));
  auto ddedcic4 = make_shared<Diagram>(dedcic4, -0.25, "e0", make_pair(true, false));
  auto ddedcic5 = make_shared<Diagram>(dedcic5, -0.25, "e0", make_pair(true, false));
  auto ddedcic6 = make_shared<Diagram>(dedcic6, -0.25, "e0", make_pair(true, false));
  auto ddedcic7 = make_shared<Diagram>(dedcic7, -0.25, "e0", make_pair(true, false));
  auto ddedcic8 = make_shared<Diagram>(dedcic8, -0.25, "e0", make_pair(true, false));
  auto ddedcic9 = make_shared<Diagram>(dedcic9, -0.25, "e0", make_pair(true, false));
  auto ddedcic10 = make_shared<Diagram>(dedcic10, -0.25, "e0", make_pair(true, false));
  auto ddedcic11 = make_shared<Diagram>(dedcic11, -0.25, "e0", make_pair(true, false));
  auto ddedcic12 = make_shared<Diagram>(dedcic12, -0.25, "e0", make_pair(true, false));
  auto ddedcic13 = make_shared<Diagram>(dedcic13, -0.25, "e0", make_pair(true, false));
  auto ddedcic14 = make_shared<Diagram>(dedcic14, -0.25, "e0", make_pair(true, false));
  auto ddedcic15 = make_shared<Diagram>(dedcic15, -0.25, "e0", make_pair(true, false));
  auto ddedcic16 = make_shared<Diagram>(dedcic16, -0.25, "e0", make_pair(true, false));
  auto ddedcic17 = make_shared<Diagram>(dedcic17, -0.25, "e0", make_pair(true, false));
  auto ddedcic18 = make_shared<Diagram>(dedcic18, -0.25, "e0", make_pair(true, false));
  auto ddedcic19 = make_shared<Diagram>(dedcic19, -0.25, "e0", make_pair(true, false));
  auto ddedcic20 = make_shared<Diagram>(dedcic20, -0.25, "e0", make_pair(true, false));
  auto ddedcic21 = make_shared<Diagram>(dedcic21, -0.25, "e0", make_pair(true, false));
  auto ddedcic22 = make_shared<Diagram>(dedcic22, -0.25, "e0", make_pair(true, false));
  auto ddedcic23 = make_shared<Diagram>(dedcic23, -0.25, "e0", make_pair(true, false));
  auto ddedcic24 = make_shared<Diagram>(dedcic24, -0.25, "e0", make_pair(true, false));
  auto ddedcid0 = make_shared<Diagram>(dedcid0, -0.25, "e0", make_pair(false, true));
  auto ddedcid1 = make_shared<Diagram>(dedcid1, -0.25, "e0", make_pair(false, true));
  auto ddedcid2 = make_shared<Diagram>(dedcid2, -0.25, "e0", make_pair(false, true));
  auto ddedcid3 = make_shared<Diagram>(dedcid3, -0.25, "e0", make_pair(false, true));
  auto ddedcid4 = make_shared<Diagram>(dedcid4, -0.25, "e0", make_pair(false, true));
  auto ddedcid5 = make_shared<Diagram>(dedcid5, -0.25, "e0", make_pair(false, true));
  auto ddedcid6 = make_shared<Diagram>(dedcid6, -0.25, "e0", make_pair(false, true));
  auto ddedcid7 = make_shared<Diagram>(dedcid7, -0.25, "e0", make_pair(false, true));
  auto ddedcid8 = make_shared<Diagram>(dedcid8, -0.25, "e0", make_pair(false, true));
  auto ddedcid9 = make_shared<Diagram>(dedcid9, -0.25, "e0", make_pair(false, true));
  auto ddedcid10 = make_shared<Diagram>(dedcid10, -0.25, "e0", make_pair(false, true));
  auto ddedcid11 = make_shared<Diagram>(dedcid11, -0.25, "e0", make_pair(false, true));
  auto ddedcid12 = make_shared<Diagram>(dedcid12, -0.25, "e0", make_pair(false, true));
  auto ddedcid13 = make_shared<Diagram>(dedcid13, -0.25, "e0", make_pair(false, true));
  auto ddedcid14 = make_shared<Diagram>(dedcid14, -0.25, "e0", make_pair(false, true));
  auto ddedcid15 = make_shared<Diagram>(dedcid15, -0.25, "e0", make_pair(false, true));
  auto ddedcid16 = make_shared<Diagram>(dedcid16, -0.25, "e0", make_pair(false, true));
  auto ddedcid17 = make_shared<Diagram>(dedcid17, -0.25, "e0", make_pair(false, true));
  auto ddedcid18 = make_shared<Diagram>(dedcid18, -0.25, "e0", make_pair(false, true));
  auto ddedcid19 = make_shared<Diagram>(dedcid19, -0.25, "e0", make_pair(false, true));
  auto ddedcid20 = make_shared<Diagram>(dedcid20, -0.25, "e0", make_pair(false, true));
  auto ddedcid21 = make_shared<Diagram>(dedcid21, -0.25, "e0", make_pair(false, true));
  auto ddedcid22 = make_shared<Diagram>(dedcid22, -0.25, "e0", make_pair(false, true));
  auto ddedcid23 = make_shared<Diagram>(dedcid23, -0.25, "e0", make_pair(false, true));
  auto ddedcid24 = make_shared<Diagram>(dedcid24, -0.25, "e0", make_pair(false, true));
  auto ddedcie0 = make_shared<Diagram>(dedcie0, 0.5, make_pair(true, false));
  auto ddedcie1 = make_shared<Diagram>(dedcie1, 0.5, make_pair(true, false));
  auto ddedcie2 = make_shared<Diagram>(dedcie2, 0.5, make_pair(true, false));
  auto ddedcie3 = make_shared<Diagram>(dedcie3, 0.5, make_pair(true, false));
  auto ddedcie4 = make_shared<Diagram>(dedcie4, 0.5, make_pair(true, false));
  auto ddedcif0 = make_shared<Diagram>(dedcif0, 0.5, make_pair(false, true));
  auto ddedcif1 = make_shared<Diagram>(dedcif1, 0.5, make_pair(false, true));
  auto ddedcif2 = make_shared<Diagram>(dedcif2, 0.5, make_pair(false, true));
  auto ddedcif3 = make_shared<Diagram>(dedcif3, 0.5, make_pair(false, true));
  auto ddedcif4 = make_shared<Diagram>(dedcif4, 0.5, make_pair(false, true));
  auto ddedcig0 = make_shared<Diagram>(dedcig0, 0.5, make_pair(true, false));
  auto ddedcig1 = make_shared<Diagram>(dedcig1, 0.5, make_pair(true, false));
  auto ddedcig2 = make_shared<Diagram>(dedcig2, 0.5, make_pair(true, false));
  auto ddedcig3 = make_shared<Diagram>(dedcig3, 0.5, make_pair(true, false));
  auto ddedcig4 = make_shared<Diagram>(dedcig4, 0.5, make_pair(true, false));
  auto ddedcih0 = make_shared<Diagram>(dedcih0, 0.5, make_pair(false, true));
  auto ddedcih1 = make_shared<Diagram>(dedcih1, 0.5, make_pair(false, true));
  auto ddedcih2 = make_shared<Diagram>(dedcih2, 0.5, make_pair(false, true));
  auto ddedcih3 = make_shared<Diagram>(dedcih3, 0.5, make_pair(false, true));
  auto ddedcih4 = make_shared<Diagram>(dedcih4, 0.5, make_pair(false, true));
  auto ededcia0 = make_shared<Equation>(ddedcia0, theory);
  auto ededcia1 = make_shared<Equation>(ddedcia1, theory);
  auto ededcia2 = make_shared<Equation>(ddedcia2, theory);
  auto ededcia3 = make_shared<Equation>(ddedcia3, theory);
  auto ededcia4 = make_shared<Equation>(ddedcia4, theory);
  auto ededcia5 = make_shared<Equation>(ddedcia5, theory);
  auto ededcia6 = make_shared<Equation>(ddedcia6, theory);
  auto ededcia7 = make_shared<Equation>(ddedcia7, theory);
  auto ededcia8 = make_shared<Equation>(ddedcia8, theory);
  auto ededcia9 = make_shared<Equation>(ddedcia9, theory);
  auto ededcia10 = make_shared<Equation>(ddedcia10, theory);
  auto ededcia11 = make_shared<Equation>(ddedcia11, theory);
  auto ededcia12 = make_shared<Equation>(ddedcia12, theory);
  auto ededcia13 = make_shared<Equation>(ddedcia13, theory);
  auto ededcia14 = make_shared<Equation>(ddedcia14, theory);
  auto ededcia15 = make_shared<Equation>(ddedcia15, theory);
  auto ededcia16 = make_shared<Equation>(ddedcia16, theory);
  auto ededcia17 = make_shared<Equation>(ddedcia17, theory);
  auto ededcia18 = make_shared<Equation>(ddedcia18, theory);
  auto ededcia19 = make_shared<Equation>(ddedcia19, theory);
  auto ededcia20 = make_shared<Equation>(ddedcia20, theory);
  auto ededcia21 = make_shared<Equation>(ddedcia21, theory);
  auto ededcia22 = make_shared<Equation>(ddedcia22, theory);
  auto ededcia23 = make_shared<Equation>(ddedcia23, theory);
  auto ededcia24 = make_shared<Equation>(ddedcia24, theory);
  auto ededcib0 = make_shared<Equation>(ddedcib0, theory);
  auto ededcib1 = make_shared<Equation>(ddedcib1, theory);
  auto ededcib2 = make_shared<Equation>(ddedcib2, theory);
  auto ededcib3 = make_shared<Equation>(ddedcib3, theory);
  auto ededcib4 = make_shared<Equation>(ddedcib4, theory);
  auto ededcib5 = make_shared<Equation>(ddedcib5, theory);
  auto ededcib6 = make_shared<Equation>(ddedcib6, theory);
  auto ededcib7 = make_shared<Equation>(ddedcib7, theory);
  auto ededcib8 = make_shared<Equation>(ddedcib8, theory);
  auto ededcib9 = make_shared<Equation>(ddedcib9, theory);
  auto ededcib10 = make_shared<Equation>(ddedcib10, theory);
  auto ededcib11 = make_shared<Equation>(ddedcib11, theory);
  auto ededcib12 = make_shared<Equation>(ddedcib12, theory);
  auto ededcib13 = make_shared<Equation>(ddedcib13, theory);
  auto ededcib14 = make_shared<Equation>(ddedcib14, theory);
  auto ededcib15 = make_shared<Equation>(ddedcib15, theory);
  auto ededcib16 = make_shared<Equation>(ddedcib16, theory);
  auto ededcib17 = make_shared<Equation>(ddedcib17, theory);
  auto ededcib18 = make_shared<Equation>(ddedcib18, theory);
  auto ededcib19 = make_shared<Equation>(ddedcib19, theory);
  auto ededcib20 = make_shared<Equation>(ddedcib20, theory);
  auto ededcib21 = make_shared<Equation>(ddedcib21, theory);
  auto ededcib22 = make_shared<Equation>(ddedcib22, theory);
  auto ededcib23 = make_shared<Equation>(ddedcib23, theory);
  auto ededcib24 = make_shared<Equation>(ddedcib24, theory);
  auto ededcic0 = make_shared<Equation>(ddedcic0, theory);
  auto ededcic1 = make_shared<Equation>(ddedcic1, theory);
  auto ededcic2 = make_shared<Equation>(ddedcic2, theory);
  auto ededcic3 = make_shared<Equation>(ddedcic3, theory);
  auto ededcic4 = make_shared<Equation>(ddedcic4, theory);
  auto ededcic5 = make_shared<Equation>(ddedcic5, theory);
  auto ededcic6 = make_shared<Equation>(ddedcic6, theory);
  auto ededcic7 = make_shared<Equation>(ddedcic7, theory);
  auto ededcic8 = make_shared<Equation>(ddedcic8, theory);
  auto ededcic9 = make_shared<Equation>(ddedcic9, theory);
  auto ededcic10 = make_shared<Equation>(ddedcic10, theory);
  auto ededcic11 = make_shared<Equation>(ddedcic11, theory);
  auto ededcic12 = make_shared<Equation>(ddedcic12, theory);
  auto ededcic13 = make_shared<Equation>(ddedcic13, theory);
  auto ededcic14 = make_shared<Equation>(ddedcic14, theory);
  auto ededcic15 = make_shared<Equation>(ddedcic15, theory);
  auto ededcic16 = make_shared<Equation>(ddedcic16, theory);
  auto ededcic17 = make_shared<Equation>(ddedcic17, theory);
  auto ededcic18 = make_shared<Equation>(ddedcic18, theory);
  auto ededcic19 = make_shared<Equation>(ddedcic19, theory);
  auto ededcic20 = make_shared<Equation>(ddedcic20, theory);
  auto ededcic21 = make_shared<Equation>(ddedcic21, theory);
  auto ededcic22 = make_shared<Equation>(ddedcic22, theory);
  auto ededcic23 = make_shared<Equation>(ddedcic23, theory);
  auto ededcic24 = make_shared<Equation>(ddedcic24, theory);
  auto ededcid0 = make_shared<Equation>(ddedcid0, theory);
  auto ededcid1 = make_shared<Equation>(ddedcid1, theory);
  auto ededcid2 = make_shared<Equation>(ddedcid2, theory);
  auto ededcid3 = make_shared<Equation>(ddedcid3, theory);
  auto ededcid4 = make_shared<Equation>(ddedcid4, theory);
  auto ededcid5 = make_shared<Equation>(ddedcid5, theory);
  auto ededcid6 = make_shared<Equation>(ddedcid6, theory);
  auto ededcid7 = make_shared<Equation>(ddedcid7, theory);
  auto ededcid8 = make_shared<Equation>(ddedcid8, theory);
  auto ededcid9 = make_shared<Equation>(ddedcid9, theory);
  auto ededcid10 = make_shared<Equation>(ddedcid10, theory);
  auto ededcid11 = make_shared<Equation>(ddedcid11, theory);
  auto ededcid12 = make_shared<Equation>(ddedcid12, theory);
  auto ededcid13 = make_shared<Equation>(ddedcid13, theory);
  auto ededcid14 = make_shared<Equation>(ddedcid14, theory);
  auto ededcid15 = make_shared<Equation>(ddedcid15, theory);
  auto ededcid16 = make_shared<Equation>(ddedcid16, theory);
  auto ededcid17 = make_shared<Equation>(ddedcid17, theory);
  auto ededcid18 = make_shared<Equation>(ddedcid18, theory);
  auto ededcid19 = make_shared<Equation>(ddedcid19, theory);
  auto ededcid20 = make_shared<Equation>(ddedcid20, theory);
  auto ededcid21 = make_shared<Equation>(ddedcid21, theory);
  auto ededcid22 = make_shared<Equation>(ddedcid22, theory);
  auto ededcid23 = make_shared<Equation>(ddedcid23, theory);
  auto ededcid24 = make_shared<Equation>(ddedcid24, theory);
  auto ededcie0 = make_shared<Equation>(ddedcie0, theory);
  auto ededcie1 = make_shared<Equation>(ddedcie1, theory);
  auto ededcie2 = make_shared<Equation>(ddedcie2, theory);
  auto ededcie3 = make_shared<Equation>(ddedcie3, theory);
  auto ededcie4 = make_shared<Equation>(ddedcie4, theory);
  auto ededcif0 = make_shared<Equation>(ddedcif0, theory);
  auto ededcif1 = make_shared<Equation>(ddedcif1, theory);
  auto ededcif2 = make_shared<Equation>(ddedcif2, theory);
  auto ededcif3 = make_shared<Equation>(ddedcif3, theory);
  auto ededcif4 = make_shared<Equation>(ddedcif4, theory);
  auto ededcig0 = make_shared<Equation>(ddedcig0, theory);
  auto ededcig1 = make_shared<Equation>(ddedcig1, theory);
  auto ededcig2 = make_shared<Equation>(ddedcig2, theory);
  auto ededcig3 = make_shared<Equation>(ddedcig3, theory);
  auto ededcig4 = make_shared<Equation>(ddedcig4, theory);
  auto ededcih0 = make_shared<Equation>(ddedcih0, theory);
  auto ededcih1 = make_shared<Equation>(ddedcih1, theory);
  auto ededcih2 = make_shared<Equation>(ddedcih2, theory);
  auto ededcih3 = make_shared<Equation>(ddedcih3, theory);
  auto ededcih4 = make_shared<Equation>(ddedcih4, theory);
  ededcia0->merge(ededcia1);
  ededcia0->merge(ededcia2);
  ededcia0->merge(ededcia3);
  ededcia0->merge(ededcia4);
  ededcia0->merge(ededcia5);
  ededcia0->merge(ededcia6);
  ededcia0->merge(ededcia7);
  ededcia0->merge(ededcia8);
  ededcia0->merge(ededcia9);
  ededcia0->merge(ededcia10);
  ededcia0->merge(ededcia11);
  ededcia0->merge(ededcia12);
  ededcia0->merge(ededcia13);
  ededcia0->merge(ededcia14);
  ededcia0->merge(ededcia15);
  ededcia0->merge(ededcia16);
  ededcia0->merge(ededcia17);
  ededcia0->merge(ededcia18);
  ededcia0->merge(ededcia19);
  ededcia0->merge(ededcia20);
  ededcia0->merge(ededcia21);
  ededcia0->merge(ededcia22);
  ededcia0->merge(ededcia23);
  ededcia0->merge(ededcia24);
  ededcia0->merge(ededcib0);
  ededcia0->merge(ededcib1);
  ededcia0->merge(ededcib2);
  ededcia0->merge(ededcib3);
  ededcia0->merge(ededcib4);
  ededcia0->merge(ededcib5);
  ededcia0->merge(ededcib6);
  ededcia0->merge(ededcib7);
  ededcia0->merge(ededcib8);
  ededcia0->merge(ededcib9);
  ededcia0->merge(ededcib10);
  ededcia0->merge(ededcib11);
  ededcia0->merge(ededcib12);
  ededcia0->merge(ededcib13);
  ededcia0->merge(ededcib14);
  ededcia0->merge(ededcib15);
  ededcia0->merge(ededcib16);
  ededcia0->merge(ededcib17);
  ededcia0->merge(ededcib18);
  ededcia0->merge(ededcib19);
  ededcia0->merge(ededcib20);
  ededcia0->merge(ededcib21);
  ededcia0->merge(ededcib22);
  ededcia0->merge(ededcib23);
  ededcia0->merge(ededcib24);
  ededcia0->merge(ededcic0);
  ededcia0->merge(ededcic1);
  ededcia0->merge(ededcic2);
  ededcia0->merge(ededcic3);
  ededcia0->merge(ededcic4);
  ededcia0->merge(ededcic5);
  ededcia0->merge(ededcic6);
  ededcia0->merge(ededcic7);
  ededcia0->merge(ededcic8);
  ededcia0->merge(ededcic9);
  ededcia0->merge(ededcic10);
  ededcia0->merge(ededcic11);
  ededcia0->merge(ededcic12);
  ededcia0->merge(ededcic13);
  ededcia0->merge(ededcic14);
  ededcia0->merge(ededcic15);
  ededcia0->merge(ededcic16);
  ededcia0->merge(ededcic17);
  ededcia0->merge(ededcic18);
  ededcia0->merge(ededcic19);
  ededcia0->merge(ededcic20);
  ededcia0->merge(ededcic21);
  ededcia0->merge(ededcic22);
  ededcia0->merge(ededcic23);
  ededcia0->merge(ededcic24);
  ededcia0->merge(ededcid0);
  ededcia0->merge(ededcid1);
  ededcia0->merge(ededcid2);
  ededcia0->merge(ededcid3);
  ededcia0->merge(ededcid4);
  ededcia0->merge(ededcid5);
  ededcia0->merge(ededcid6);
  ededcia0->merge(ededcid7);
  ededcia0->merge(ededcid8);
  ededcia0->merge(ededcid9);
  ededcia0->merge(ededcid10);
  ededcia0->merge(ededcid11);
  ededcia0->merge(ededcid12);
  ededcia0->merge(ededcid13);
  ededcia0->merge(ededcid14);
  ededcia0->merge(ededcid15);
  ededcia0->merge(ededcid16);
  ededcia0->merge(ededcid17);
  ededcia0->merge(ededcid18);
  ededcia0->merge(ededcid19);
  ededcia0->merge(ededcid20);
  ededcia0->merge(ededcid21);
  ededcia0->merge(ededcid22);
  ededcia0->merge(ededcid23);
  ededcia0->merge(ededcid24);
  ededcia0->merge(ededcie0);
  ededcia0->merge(ededcie1);
  ededcia0->merge(ededcie2);
  ededcia0->merge(ededcie3);
  ededcia0->merge(ededcie4);
  ededcia0->merge(ededcif0);
  ededcia0->merge(ededcif1);
  ededcia0->merge(ededcif2);
  ededcia0->merge(ededcif3);
  ededcia0->merge(ededcif4);
  ededcia0->merge(ededcig0);
  ededcia0->merge(ededcig1);
  ededcia0->merge(ededcig2);
  ededcia0->merge(ededcig3);
  ededcia0->merge(ededcig4);
  ededcia0->merge(ededcih0);
  ededcia0->merge(ededcih1);
  ededcia0->merge(ededcih2);
  ededcia0->merge(ededcih3);
  ededcia0->merge(ededcih4);
  ededcia0->absorb_ket();
  ededcia0->duplicates();
  ededcia0->active();
  auto tdedcia = make_shared<Dedci>(ededcia0, "dedci");

  list<shared_ptr<Tree>> trees = {tra, tea, tca, tda, tdb, td2a, tdedcia};
  auto fr = make_shared<Forest>(trees);

  fr->filter_gamma();
  list<shared_ptr<Tensor>> gm = fr->gamma();
  const list<shared_ptr<Tensor>> gamma = gm;

  auto tmp = fr->generate_code();

  ofstream fs(fr->name() + ".h");
  ofstream es(fr->name() + "_tasks.h");
  ofstream cs(fr->name() + "_gen.cc");
  ofstream ds(fr->name() + "_tasks.cc");
  fs << tmp.ss.str();
  es << tmp.tt.str();
  cs << tmp.cc.str();
  ds << tmp.dd.str();
  fs.close();
  es.close();
  cs.close();
  ds.close();
  cout << std::endl;

  // output
  cout << std::endl << "   ***  Residual  ***" << std::endl << std::endl;
  tra->print();
  cout << std::endl << "   ***  Energy E2 ***" << std::endl << std::endl;
  tea->print();
  cout << std::endl << "   ***  Correlated norm <1|1> ***" << std::endl << std::endl;
  tca->print();
  cout << std::endl << "   ***  Correlated one-body density matrix d2 ***" << std::endl << std::endl;
  tda->print();
  cout << std::endl << "   ***  Correlated one-body density matrix d1 ***" << std::endl << std::endl;
  tdb->print();
  cout << std::endl << "   ***  Correlated two-body density matrix D1 ***" << std::endl << std::endl;
  td2a->print();
  cout << std::endl << "   ***  CI derivative  ***" << std::endl << std::endl;
  tdedcia->print();
  cout << std::endl << std::endl;

  return 0;
}

